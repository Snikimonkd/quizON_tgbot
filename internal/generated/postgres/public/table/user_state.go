//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var UserState = newUserStateTable("public", "user_state", "")

type userStateTable struct {
	postgres.Table

	// Columns
	UserID postgres.ColumnInteger
	State  postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type UserStateTable struct {
	userStateTable

	EXCLUDED userStateTable
}

// AS creates new UserStateTable with assigned alias
func (a UserStateTable) AS(alias string) *UserStateTable {
	return newUserStateTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new UserStateTable with assigned schema name
func (a UserStateTable) FromSchema(schemaName string) *UserStateTable {
	return newUserStateTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new UserStateTable with assigned table prefix
func (a UserStateTable) WithPrefix(prefix string) *UserStateTable {
	return newUserStateTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new UserStateTable with assigned table suffix
func (a UserStateTable) WithSuffix(suffix string) *UserStateTable {
	return newUserStateTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newUserStateTable(schemaName, tableName, alias string) *UserStateTable {
	return &UserStateTable{
		userStateTable: newUserStateTableImpl(schemaName, tableName, alias),
		EXCLUDED:       newUserStateTableImpl("", "excluded", ""),
	}
}

func newUserStateTableImpl(schemaName, tableName, alias string) userStateTable {
	var (
		UserIDColumn   = postgres.IntegerColumn("user_id")
		StateColumn    = postgres.StringColumn("state")
		allColumns     = postgres.ColumnList{UserIDColumn, StateColumn}
		mutableColumns = postgres.ColumnList{UserIDColumn, StateColumn}
	)

	return userStateTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		UserID: UserIDColumn,
		State:  StateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
